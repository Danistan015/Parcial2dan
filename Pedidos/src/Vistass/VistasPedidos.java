/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vistass;

import Conexion.DatabaseSingleton;
import Controlador.ControladorCliente;
import Controlador.ControladorPedido;
import Exception.NoEncuentraException;
import Modelo.Pedido;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sotog
 */
public class VistasPedidos extends javax.swing.JFrame {

    ControladorCliente controla;
    ControladorPedido contro;
    private Connection con;

    /**
     * Creates new form VistasClientes
     */
    public VistasPedidos() {
        initComponents();
        setLocationRelativeTo(this);
        contro = new ControladorPedido();
        controla = new ControladorCliente();
        this.con = DatabaseSingleton.getInstance().getConnection();
        llenarTabla();
        cargarCombo();
        cargarComboFiltro();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        comboCliente = new javax.swing.JComboBox<>();
        txtId = new javax.swing.JTextField();
        btninsertar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnElimnar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        comboFiltro = new javax.swing.JComboBox<>();
        btnFiltrar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("Buscar por id:");

        comboCliente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btninsertar.setText("Insertar");
        btninsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btninsertarActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnElimnar.setText("Eliminar");
        btnElimnar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnElimnarActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla);

        jLabel3.setText("Clientes:");

        comboFiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnFiltrar.setText("filtrar");
        btnFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltrarActionPerformed(evt);
            }
        });

        jLabel4.setText("Total:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(122, 122, 122)
                                .addComponent(comboFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(btnFiltrar))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(btninsertar)
                        .addGap(49, 49, 49)
                        .addComponent(btnBuscar)
                        .addGap(77, 77, 77)
                        .addComponent(btnEditar)
                        .addGap(66, 66, 66)
                        .addComponent(btnElimnar)))
                .addContainerGap(71, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtId, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTotal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(comboCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(136, 136, 136))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(comboCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscar)
                    .addComponent(btninsertar)
                    .addComponent(btnEditar)
                    .addComponent(btnElimnar))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFiltrar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71))
        );

        jMenu1.setText("Mas");

        jMenuItem1.setText("volver");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btninsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btninsertarActionPerformed
        // TODO add your handling code here:
        if (txtTotal.getText().isEmpty() || comboCliente.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "llene todos los campos.");
        } else {
                int id = 0;
                String fecha = String.valueOf(LocalDate.now());
                int total = Integer.parseInt(txtTotal.getText());
                String combo = (String) comboCliente.getSelectedItem();
            try {
                 
               
                 int id_cliente = controla.buscarIDClienteNombre(combo);
                Pedido pedido = new Pedido(fecha, total, id, id_cliente);
                contro.agregar(pedido);
                JOptionPane.showMessageDialog(null, "Pedido guardado");
                llenarTabla();
                limpiarCampos();
           
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error al guardar el pedido.");
            }
        }

    }//GEN-LAST:event_btninsertarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        if (txtId.getText().isEmpty()) {
    JOptionPane.showMessageDialog(rootPane, "Por favor, ingrese el ID del pedido que desea editar");
} else {
    try {
        int id = Integer.parseInt(txtId.getText());
        String fecha = String.valueOf(LocalDate.now());
        
        if (txtTotal.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor, ingrese el total del pedido");
        } else {
            double total = Double.parseDouble(txtTotal.getText());
            
            if (comboCliente.getSelectedItem() == null) {
                JOptionPane.showMessageDialog(null, "Por favor, seleccione un cliente");
            } else {
                String combo = (String) comboCliente.getSelectedItem();
                int id_cliente = controla.buscarIDClienteNombre(combo);

                contro.editarPedido(id, fecha, total, id_cliente);
                JOptionPane.showMessageDialog(null, "Pedido modificado");
                txtId.setEditable(true);
                llenarTabla();
            }
        }
    } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog(null, "Ingrese un ID válido");
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "Error al modificar el pedido");
        System.out.println(ex.toString());
    }
}

    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnElimnarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnElimnarActionPerformed
        // TODO add your handling code here:
        if (txtId.getText().isEmpty()) {
    JOptionPane.showMessageDialog(null, "Por favor, ingrese el ID del pedido que desea eliminar");
} else {
    try {
        int id = Integer.parseInt(txtId.getText());
        
        Pedido pedidoAEliminar = contro.buscarPedido(id);
        
        if (pedidoAEliminar != null) {
            contro.eliminarPedido(id);
            JOptionPane.showMessageDialog(null, "Pedido Eliminado");
            txtId.setEditable(true);
            llenarTabla();
        } else {
            JOptionPane.showMessageDialog(null, "El pedido con ID " + id + " no fue encontrado");
        }
    } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog(null, "Ingrese un ID válido");
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "Error al Eliminar");
        System.out.println(ex.toString());
    }
}

    }//GEN-LAST:event_btnElimnarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        if (txtId.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "ingrese la cedula");
        } else {
            int id = Integer.parseInt(txtId.getText());

            try {
                Pedido pedidoEncontrado = contro.buscarPedido(id);

                if (pedidoEncontrado == null) {
                    throw new NoEncuentraException();
                }
                txtId.setEditable(false);
                txtTotal.setText(String.valueOf(pedidoEncontrado.getTotal()));
                txtId.setText(String.valueOf(pedidoEncontrado.getIdPedido()));
                comboCliente.setSelectedItem(comboCliente.getSelectedItem());

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error al buscar");
            } catch (NoEncuentraException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseClicked
        // TODO add your handling code here:
        int seleccionado = tabla.getSelectedRow();
        txtId.setEditable(false);
        txtId.setText(tabla.getValueAt(seleccionado, 0).toString());
        txtTotal.setText(tabla.getValueAt(seleccionado, 2).toString());
        
        comboCliente.setSelectedItem(tabla.getValueAt(seleccionado, 3).toString());
    }//GEN-LAST:event_tablaMouseClicked

    private void btnFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltrarActionPerformed
        // TODO add your handling code here:
        if (comboFiltro.getSelectedIndex() == 0) {
            llenarTabla();
        } else {
            String cliente = comboFiltro.getSelectedItem().toString();
            llenarTablaFiltro(cliente);
        }
    }//GEN-LAST:event_btnFiltrarActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        new VistaMenu().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem1ActionPerformed
    public void llenarTabla() {
        DefaultTableModel modelo = new DefaultTableModel();
        try {
            ArrayList<Pedido> lista = contro.lista();

            modelo.setColumnIdentifiers(new Object[]{"ID", "fecha", "total", "cliente"});
            tabla.setModel(modelo);

            for (int i = 0; i < lista.size(); i++) {
                Pedido pedido = lista.get(i);
                modelo.addRow(new Object[]{
                    pedido.getIdPedido(),
                    pedido.getFechaPedido(),
                    pedido.getTotal(),
                    pedido.getNombreCliente()

                });
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }

    public void llenarTablaFiltro(String clienteSelecionado) {
        DefaultTableModel modelo = new DefaultTableModel();
        try {
            ArrayList<Pedido> lista = contro.lista();

            modelo.setColumnIdentifiers(new Object[]{"ID", "fecha", "total", "cliente"});
            tabla.setModel(modelo);

            for (int i = 0; i < lista.size(); i++) {
                Pedido pedidos = lista.get(i);

                if (pedidos.getNombreCliente().equals(clienteSelecionado)) {
                    modelo.addRow(new Object[]{
                        pedidos.getIdPedido(),
                        pedidos.getFechaPedido(),
                        pedidos.getTotal(),
                        pedidos.getNombreCliente()

                    });
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }

    public void cargarComboFiltro() {
        try {
            DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
            comboFiltro.setModel(model);
            PreparedStatement ps = null;
            ResultSet rs = null;

            String sql = "SELECT * FROM clientes";

            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();

            model.addElement("Seleccione un cliente"); // Agrega la opción predeterminada

            while (rs.next()) {
                String categoryName = rs.getString("Nombre");
                model.addElement(categoryName);
            }

        } catch (SQLException ex) {
            System.err.print(ex.toString());
        }
    }

    public void cargarCombo() {
        try {
            DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
            comboCliente.setModel(model);
            PreparedStatement ps = null;
            ResultSet rs = null;

            String sql = "SELECT * FROM clientes";

            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();

            model.addElement("Seleccione un cliente"); // Agrega la opción predeterminada

            while (rs.next()) {
                String categoryName = rs.getString("Nombre");
                model.addElement(categoryName);
            }

        } catch (SQLException ex) {
            System.err.print(ex.toString());
        }
    }

    public void limpiarCampos() {
        txtId.setText("");
        txtTotal.setText("");
        comboCliente.setSelectedItem(0);

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VistasPedidos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnElimnar;
    private javax.swing.JButton btnFiltrar;
    private javax.swing.JButton btninsertar;
    private javax.swing.JComboBox<String> comboCliente;
    private javax.swing.JComboBox<String> comboFiltro;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}
